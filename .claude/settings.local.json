{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(npm init:*)",
      "Bash(npm create:*)",
      "Bash(npx:*)",
      "Bash(npm uninstall:*)",
      "Bash(npm install:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(npm run build:*)",
      "Bash(npm test)",
      "Bash(npm run:*)",
      "Bash(python:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(./pdf_env/bin/pip install boto3 botocore)",
      "Bash(lsof:*)",
      "Bash(xargs kill:*)",
      "Bash(serverless --version)",
      "Bash(serverless print:*)",
      "Bash(docker:*)",
      "Bash(serverless deploy:*)",
      "Bash(brew list:*)",
      "Bash(brew install:*)",
      "Bash(PATH=\"/opt/homebrew/bin:$PATH\" serverless deploy --stage dev)",
      "Bash(PATH=\"/opt/homebrew/bin:$PATH\" serverless remove --stage dev)",
      "Bash(aws cloudformation:*)",
      "Bash(aws dynamodb list-tables:*)",
      "Bash(terraform:*)",
      "Bash(tree:*)",
      "Bash(aws sts get-caller-identity:*)",
      "Bash(./scripts/build-functions.sh:*)",
      "Read(//Users/ramanjaneyulumedikonda/dev/**)",
      "Bash(api/pdf_env/bin/pip install -r api/requirements.txt)",
      "Read(//Users/ramanjaneyulumedikonda/Desktop/**)",
      "Bash(find:*)",
      "Bash(aws logs describe-log-groups:*)",
      "Bash(aws logs describe-log-streams:*)",
      "Bash(aws apigateway get-resources:*)",
      "Bash(aws apigateway get-rest-apis:*)",
      "Bash(aws dynamodb scan:*)",
      "Bash(./scripts/build-all.sh:*)",
      "Bash(aws dynamodb describe-table:*)",
      "Bash(aws s3 ls:*)",
      "Bash(aws logs tail:*)",
      "Bash(PATH=\"/opt/homebrew/bin:$PATH\" serverless print)",
      "Bash(aws lambda get-function:*)",
      "Bash(aws logs get-log-events:*)",
      "Read(//private/tmp/**)",
      "Bash(unzip:*)",
      "Bash(aws apigateway:*)",
      "Bash(./infrastructure/scripts/build-functions.sh:*)",
      "Bash(node:*)",
      "Bash(aws sqs:*)",
      "Bash(aws s3api get-bucket-notification-configuration:*)",
      "Bash(./infrastructure/scripts/build-layers.sh:*)",
      "Bash(pip index versions:*)",
      "Bash(aws lambda list-event-source-mappings:*)",
      "Bash(aws configure get:*)",
      "Bash(aws lambda list-functions:*)",
      "Bash(./scripts/build-layers.sh:*)",
      "Bash(/Users/ramanjaneyulumedikonda/dev/aide/infrastructure/scripts/build-layers.sh:*)",
      "Bash(./infrastructure/scripts/build-layers-docker.sh:*)",
      "Bash(./scripts/build-layers-docker.sh:*)",
      "WebSearch",
      "Bash(aws lambda get-event-source-mapping:*)",
      "Bash(echo:*)",
      "Bash(aws s3 mb:*)",
      "Bash(export BUCKET_NAME=\"pdf-extractor-ui-static\")",
      "Bash(aws s3 website s3://$BUCKET_NAME --index-document index.html --error-document index.html)",
      "Read(//Applications/PostgreSQL 17/**)",
      "Read(//Users/ramanjaneyulumedikonda/Library/**)",
      "Read(//Library/**)",
      "Bash(sudo du:*)",
      "Bash(launchctl:*)",
      "Bash(sudo launchctl:*)",
      "Read(//Users/ramanjaneyulumedikonda/**)",
      "Read(//usr/local/**)",
      "Read(//private/var/**)",
      "Bash(sudo rm:*)",
      "Bash(git add:*)",
      "Bash(gh pr view:*)",
      "Bash(git reset:*)",
      "Bash(rm:*)",
      "Read(//tmp/**)",
      "Bash(aws lambda invoke:*)",
      "Bash(cat:*)",
      "Bash(./infrastructure/scripts/build-all.sh:*)",
      "Bash(python3:*)",
      "Bash(gh pr:*)",
      "Bash(git branch:*)",
      "Bash(git pull:*)",
      "Bash(grep:*)",
      "Bash(pip3 install:*)",
      "Bash(../infrastructure/scripts/build-functions.sh)",
      "Bash(../infrastructure/scripts/build-layers.sh:*)",
      "Bash(aws dynamodb put-item:*)",
      "Bash(aws dynamodb batch-write-item:*)",
      "WebFetch(domain:zachwills.net)",
      "Bash(git checkout:*)",
      "Bash(git log:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)"
    ],
    "deny": [],
    "ask": []
  }
}