{
  "version": 4,
  "terraform_version": "1.13.1",
  "serial": 1045,
  "lineage": "a5cb64f6-cd98-798a-583f-ba8409a52c43",
  "outputs": {
    "api_gateway_details": {
      "value": {
        "execution_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui",
        "id": "cypom236ui",
        "name": "pdf-extractor-api-api",
        "root_resource_id": "y7ovgdpsvh"
      },
      "type": [
        "object",
        {
          "execution_arn": "string",
          "id": "string",
          "name": "string",
          "root_resource_id": "string"
        }
      ]
    },
    "api_gateway_url": {
      "value": "https://cypom236ui.execute-api.us-east-1.amazonaws.com/dev",
      "type": "string"
    },
    "api_key": {
      "value": {
        "id": "f44ywxfkz1",
        "name": "pdf-extractor-api-api-key",
        "value": "D2L3T4ryap6pbW4bwj1Mc4yfUY5uA2sladoCr53j"
      },
      "type": [
        "object",
        {
          "id": "string",
          "name": "string",
          "value": "string"
        }
      ],
      "sensitive": true
    },
    "deployment_info": {
      "value": {
        "account_id": "855212953422",
        "aws_region": "us-east-1",
        "name_prefix": "pdf-extractor-api",
        "project_name": "pdf-extractor-api"
      },
      "type": [
        "object",
        {
          "account_id": "string",
          "aws_region": "string",
          "name_prefix": "string",
          "project_name": "string"
        }
      ]
    },
    "dynamodb_tables": {
      "value": {
        "jobs": {
          "arn": "arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-jobs",
          "id": "pdf-extractor-api-jobs",
          "name": "pdf-extractor-api-jobs"
        },
        "transactions": {
          "arn": "arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-transactions",
          "id": "pdf-extractor-api-transactions",
          "name": "pdf-extractor-api-transactions"
        },
        "usage": {
          "arn": "arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-usage",
          "id": "pdf-extractor-api-usage",
          "name": "pdf-extractor-api-usage"
        }
      },
      "type": [
        "object",
        {
          "jobs": [
            "object",
            {
              "arn": "string",
              "id": "string",
              "name": "string"
            }
          ],
          "transactions": [
            "object",
            {
              "arn": "string",
              "id": "string",
              "name": "string"
            }
          ],
          "usage": [
            "object",
            {
              "arn": "string",
              "id": "string",
              "name": "string"
            }
          ]
        }
      ]
    },
    "frontend": {
      "value": {
        "cloudfront_distribution_id": "E9KXLSRFTJ38Z",
        "cloudfront_domain": "d300pkcz1cpyay.cloudfront.net",
        "s3_bucket_name": "pdf-extractor-api-ui-static",
        "website_url": "https://d300pkcz1cpyay.cloudfront.net"
      },
      "type": [
        "object",
        {
          "cloudfront_distribution_id": "string",
          "cloudfront_domain": "string",
          "s3_bucket_name": "string",
          "website_url": "string"
        }
      ]
    },
    "iam_roles": {
      "value": {
        "arn": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
        "id": "pdf-extractor-api-lambda-role",
        "name": "pdf-extractor-api-lambda-role"
      },
      "type": [
        "object",
        {
          "arn": "string",
          "id": "string",
          "name": "string"
        }
      ]
    },
    "lambda_functions": {
      "value": {
        "api": {
          "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api/invocations",
          "name": "pdf-extractor-api-api",
          "version": "$LATEST"
        },
        "cleanup": {
          "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-cleanup",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-cleanup/invocations",
          "name": "pdf-extractor-api-cleanup",
          "version": "$LATEST"
        },
        "csv_export": {
          "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-csv-export",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-csv-export/invocations",
          "name": "pdf-extractor-api-csv-export",
          "version": "$LATEST"
        },
        "dlq_processor": {
          "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-dlq-processor",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-dlq-processor/invocations",
          "name": "pdf-extractor-api-dlq-processor",
          "version": "$LATEST"
        },
        "pdf_viewer": {
          "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-pdf-viewer",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-pdf-viewer/invocations",
          "name": "pdf-extractor-api-pdf-viewer",
          "version": "$LATEST"
        },
        "processor": {
          "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-processor",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-processor/invocations",
          "name": "pdf-extractor-api-processor",
          "version": "$LATEST"
        },
        "statement_data": {
          "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-statement-data",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-statement-data/invocations",
          "name": "pdf-extractor-api-statement-data",
          "version": "$LATEST"
        },
        "upload": {
          "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-upload",
          "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-upload/invocations",
          "name": "pdf-extractor-api-upload",
          "version": "$LATEST"
        }
      },
      "type": [
        "object",
        {
          "api": [
            "object",
            {
              "arn": "string",
              "invoke_arn": "string",
              "name": "string",
              "version": "string"
            }
          ],
          "cleanup": [
            "object",
            {
              "arn": "string",
              "invoke_arn": "string",
              "name": "string",
              "version": "string"
            }
          ],
          "csv_export": [
            "object",
            {
              "arn": "string",
              "invoke_arn": "string",
              "name": "string",
              "version": "string"
            }
          ],
          "dlq_processor": [
            "object",
            {
              "arn": "string",
              "invoke_arn": "string",
              "name": "string",
              "version": "string"
            }
          ],
          "pdf_viewer": [
            "object",
            {
              "arn": "string",
              "invoke_arn": "string",
              "name": "string",
              "version": "string"
            }
          ],
          "processor": [
            "object",
            {
              "arn": "string",
              "invoke_arn": "string",
              "name": "string",
              "version": "string"
            }
          ],
          "statement_data": [
            "object",
            {
              "arn": "string",
              "invoke_arn": "string",
              "name": "string",
              "version": "string"
            }
          ],
          "upload": [
            "object",
            {
              "arn": "string",
              "invoke_arn": "string",
              "name": "string",
              "version": "string"
            }
          ]
        }
      ]
    },
    "log_groups": {
      "value": {
        "api_gateway_logs": "/aws/apigateway/pdf-extractor-api-api",
        "lambda_logs": {
          "api": "/aws/lambda/pdf-extractor-api-api",
          "cleanup": "/aws/lambda/pdf-extractor-api-cleanup",
          "csv_export": "/aws/lambda/pdf-extractor-api-csv-export",
          "dlq_processor": "/aws/lambda/pdf-extractor-api-dlq-processor",
          "pdf_viewer": "/aws/lambda/pdf-extractor-api-pdf-viewer",
          "processor": "/aws/lambda/pdf-extractor-api-processor",
          "statement_data": "/aws/lambda/pdf-extractor-api-statement-data",
          "upload": "/aws/lambda/pdf-extractor-api-upload"
        }
      },
      "type": [
        "object",
        {
          "api_gateway_logs": "string",
          "lambda_logs": [
            "object",
            {
              "api": "string",
              "cleanup": "string",
              "csv_export": "string",
              "dlq_processor": "string",
              "pdf_viewer": "string",
              "processor": "string",
              "statement_data": "string",
              "upload": "string"
            }
          ]
        }
      ]
    },
    "s3_bucket": {
      "value": {
        "arn": "arn:aws:s3:::pdf-extractor-api-storage",
        "domain": "pdf-extractor-api-storage.s3.amazonaws.com",
        "id": "pdf-extractor-api-storage",
        "name": "pdf-extractor-api-storage",
        "region": "us-east-1"
      },
      "type": [
        "object",
        {
          "arn": "string",
          "domain": "string",
          "id": "string",
          "name": "string",
          "region": "string"
        }
      ]
    },
    "sqs_queues": {
      "value": {
        "dlq": {
          "arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq",
          "id": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
          "name": "pdf-extractor-api-dlq",
          "url": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq"
        },
        "processing": {
          "arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-processing",
          "id": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
          "name": "pdf-extractor-api-processing",
          "url": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing"
        }
      },
      "type": [
        "object",
        {
          "dlq": [
            "object",
            {
              "arn": "string",
              "id": "string",
              "name": "string",
              "url": "string"
            }
          ],
          "processing": [
            "object",
            {
              "arn": "string",
              "id": "string",
              "name": "string",
              "url": "string"
            }
          ]
        }
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "855212953422",
            "arn": "arn:aws:iam::855212953422:user/anjimedikonda",
            "id": "855212953422",
            "user_id": "AIDA4OHVKB5HCRJBIDIHT"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_account",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_version": "4",
            "cloudwatch_role_arn": "arn:aws:iam::855212953422:role/pdf-extractor-api-api-gateway-cloudwatch",
            "features": [
              "UsagePlans"
            ],
            "id": "api-gateway-account",
            "reset_on_delete": null,
            "throttle_settings": [
              {
                "burst_limit": 5000,
                "rate_limit": 10000
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_api_key",
      "name": "api_key",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:apigateway:us-east-1::/apikeys/f44ywxfkz1",
            "created_date": "2025-09-17T00:52:19Z",
            "customer_id": "",
            "description": "API key for PDF Extractor API",
            "enabled": true,
            "id": "f44ywxfkz1",
            "last_updated_date": "2025-09-17T00:52:19Z",
            "name": "pdf-extractor-api-api-key",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "value": "D2L3T4ryap6pbW4bwj1Mc4yfUY5uA2sladoCr53j"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "value"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_deployment",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "canary_settings": [],
            "created_date": "2025-09-22T16:11:32Z",
            "description": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui/",
            "id": "1ug026",
            "invoke_url": "https://cypom236ui.execute-api.us-east-1.amazonaws.com/",
            "rest_api_id": "cypom236ui",
            "stage_description": null,
            "stage_name": null,
            "triggers": {
              "redeployment": "449e323958b90335f838fe5c09a759c61c14b663"
            },
            "variables": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "cors_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "gjh0md",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "OPTIONS",
            "id": "agi-cypom236ui-gjh0md-OPTIONS",
            "integration_http_method": "",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {
              "application/json": "{\"statusCode\":200}"
            },
            "resource_id": "gjh0md",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "MOCK",
            "uri": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "cors_pdf_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "wp86tw",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "OPTIONS",
            "id": "agi-cypom236ui-wp86tw-OPTIONS",
            "integration_http_method": "",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {
              "application/json": "{\"statusCode\":200}"
            },
            "resource_id": "wp86tw",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "MOCK",
            "uri": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "cors_root_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "y7ovgdpsvh",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "OPTIONS",
            "id": "agi-cypom236ui-y7ovgdpsvh-OPTIONS",
            "integration_http_method": "",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {
              "application/json": "{\"statusCode\":200}"
            },
            "resource_id": "y7ovgdpsvh",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "MOCK",
            "uri": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "cors_statements_csv_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "li0swx",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "OPTIONS",
            "id": "agi-cypom236ui-li0swx-OPTIONS",
            "integration_http_method": "",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {
              "application/json": "{\"statusCode\":200}"
            },
            "resource_id": "li0swx",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "MOCK",
            "uri": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "cors_statements_data_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "o554kt",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "OPTIONS",
            "id": "agi-cypom236ui-o554kt-OPTIONS",
            "integration_http_method": "",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {
              "application/json": "{\"statusCode\":200}"
            },
            "resource_id": "o554kt",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "MOCK",
            "uri": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "cors_statements_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "8bi5al",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "OPTIONS",
            "id": "agi-cypom236ui-8bi5al-OPTIONS",
            "integration_http_method": "",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {
              "application/json": "{\"statusCode\":200}"
            },
            "resource_id": "8bi5al",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "MOCK",
            "uri": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "cors_upload_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "7luzob",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "OPTIONS",
            "id": "agi-cypom236ui-7luzob-OPTIONS",
            "integration_http_method": "",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {
              "application/json": "{\"statusCode\":200}"
            },
            "resource_id": "7luzob",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "MOCK",
            "uri": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "pdf_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "wp86tw",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "GET",
            "id": "agi-cypom236ui-wp86tw-GET",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "wp86tw",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-pdf-viewer/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "proxy_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "gjh0md",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "ANY",
            "id": "agi-cypom236ui-gjh0md-ANY",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "gjh0md",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "proxy_root_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "y7ovgdpsvh",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "ANY",
            "id": "agi-cypom236ui-y7ovgdpsvh-ANY",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "y7ovgdpsvh",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "statements_csv_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "li0swx",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "GET",
            "id": "agi-cypom236ui-li0swx-GET",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "li0swx",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-csv-export/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "statements_data_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "o554kt",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "GET",
            "id": "agi-cypom236ui-o554kt-GET",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "o554kt",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-statement-data/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "statements_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "8bi5al",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "GET",
            "id": "agi-cypom236ui-8bi5al-GET",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "8bi5al",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration",
      "name": "upload_integration",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cache_key_parameters": [],
            "cache_namespace": "7luzob",
            "connection_id": "",
            "connection_type": "INTERNET",
            "content_handling": "",
            "credentials": "",
            "http_method": "POST",
            "id": "agi-cypom236ui-7luzob-POST",
            "integration_http_method": "POST",
            "passthrough_behavior": "WHEN_NO_MATCH",
            "request_parameters": {},
            "request_templates": {},
            "resource_id": "7luzob",
            "rest_api_id": "cypom236ui",
            "timeout_milliseconds": 29000,
            "tls_config": [],
            "type": "AWS_PROXY",
            "uri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-upload/invocations"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration_response",
      "name": "cors_integration_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content_handling": "",
            "http_method": "OPTIONS",
            "id": "agir-cypom236ui-gjh0md-OPTIONS-200",
            "resource_id": "gjh0md",
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With'",
              "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "response_templates": {},
            "rest_api_id": "cypom236ui",
            "selection_pattern": "",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration_response",
      "name": "cors_pdf_integration_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content_handling": "",
            "http_method": "OPTIONS",
            "id": "agir-cypom236ui-wp86tw-OPTIONS-200",
            "resource_id": "wp86tw",
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With'",
              "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "response_templates": {},
            "rest_api_id": "cypom236ui",
            "selection_pattern": "",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration_response",
      "name": "cors_root_integration_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content_handling": "",
            "http_method": "OPTIONS",
            "id": "agir-cypom236ui-y7ovgdpsvh-OPTIONS-200",
            "resource_id": "y7ovgdpsvh",
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With'",
              "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "response_templates": {},
            "rest_api_id": "cypom236ui",
            "selection_pattern": "",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration_response",
      "name": "cors_statements_csv_integration_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content_handling": "",
            "http_method": "OPTIONS",
            "id": "agir-cypom236ui-li0swx-OPTIONS-200",
            "resource_id": "li0swx",
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With'",
              "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "response_templates": {},
            "rest_api_id": "cypom236ui",
            "selection_pattern": "",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration_response",
      "name": "cors_statements_data_integration_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content_handling": "",
            "http_method": "OPTIONS",
            "id": "agir-cypom236ui-o554kt-OPTIONS-200",
            "resource_id": "o554kt",
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With'",
              "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "response_templates": {},
            "rest_api_id": "cypom236ui",
            "selection_pattern": "",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration_response",
      "name": "cors_statements_integration_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content_handling": "",
            "http_method": "OPTIONS",
            "id": "agir-cypom236ui-8bi5al-OPTIONS-200",
            "resource_id": "8bi5al",
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With'",
              "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "response_templates": {},
            "rest_api_id": "cypom236ui",
            "selection_pattern": "",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_integration_response",
      "name": "cors_upload_integration_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content_handling": "",
            "http_method": "OPTIONS",
            "id": "agir-cypom236ui-7luzob-OPTIONS-200",
            "resource_id": "7luzob",
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Requested-With'",
              "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
              "method.response.header.Access-Control-Allow-Origin": "'*'"
            },
            "response_templates": {},
            "rest_api_id": "cypom236ui",
            "selection_pattern": "",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "cors_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "OPTIONS",
            "id": "agm-cypom236ui-gjh0md-OPTIONS",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "gjh0md",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "cors_pdf_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "OPTIONS",
            "id": "agm-cypom236ui-wp86tw-OPTIONS",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "wp86tw",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "cors_root_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "OPTIONS",
            "id": "agm-cypom236ui-y7ovgdpsvh-OPTIONS",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "y7ovgdpsvh",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "cors_statements_csv_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "OPTIONS",
            "id": "agm-cypom236ui-li0swx-OPTIONS",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "li0swx",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "cors_statements_data_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "OPTIONS",
            "id": "agm-cypom236ui-o554kt-OPTIONS",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "o554kt",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "cors_statements_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "OPTIONS",
            "id": "agm-cypom236ui-8bi5al-OPTIONS",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "8bi5al",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "cors_upload_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": false,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "OPTIONS",
            "id": "agm-cypom236ui-7luzob-OPTIONS",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "7luzob",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "pdf_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "GET",
            "id": "agm-cypom236ui-wp86tw-GET",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {
              "method.request.path.job_id": true
            },
            "request_validator_id": "",
            "resource_id": "wp86tw",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "proxy_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "ANY",
            "id": "agm-cypom236ui-gjh0md-ANY",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {
              "method.request.path.proxy": true
            },
            "request_validator_id": "",
            "resource_id": "gjh0md",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "proxy_root_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "ANY",
            "id": "agm-cypom236ui-y7ovgdpsvh-ANY",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "y7ovgdpsvh",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "statements_csv_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "GET",
            "id": "agm-cypom236ui-li0swx-GET",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "li0swx",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "statements_data_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "GET",
            "id": "agm-cypom236ui-o554kt-GET",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "o554kt",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "statements_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "GET",
            "id": "agm-cypom236ui-8bi5al-GET",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "8bi5al",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method",
      "name": "upload_method",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_required": true,
            "authorization": "NONE",
            "authorization_scopes": [],
            "authorizer_id": "",
            "http_method": "POST",
            "id": "agm-cypom236ui-7luzob-POST",
            "operation_name": "",
            "request_models": {},
            "request_parameters": {},
            "request_validator_id": "",
            "resource_id": "7luzob",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method_response",
      "name": "cors_method_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_method": "OPTIONS",
            "id": "agmr-cypom236ui-gjh0md-OPTIONS-200",
            "resource_id": "gjh0md",
            "response_models": {
              "application/json": "Empty"
            },
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "rest_api_id": "cypom236ui",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method_response",
      "name": "cors_pdf_method_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_method": "OPTIONS",
            "id": "agmr-cypom236ui-wp86tw-OPTIONS-200",
            "resource_id": "wp86tw",
            "response_models": {
              "application/json": "Empty"
            },
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "rest_api_id": "cypom236ui",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method_response",
      "name": "cors_root_method_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_method": "OPTIONS",
            "id": "agmr-cypom236ui-y7ovgdpsvh-OPTIONS-200",
            "resource_id": "y7ovgdpsvh",
            "response_models": {
              "application/json": "Empty"
            },
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "rest_api_id": "cypom236ui",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method_response",
      "name": "cors_statements_csv_method_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_method": "OPTIONS",
            "id": "agmr-cypom236ui-li0swx-OPTIONS-200",
            "resource_id": "li0swx",
            "response_models": {
              "application/json": "Empty"
            },
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "rest_api_id": "cypom236ui",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method_response",
      "name": "cors_statements_data_method_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_method": "OPTIONS",
            "id": "agmr-cypom236ui-o554kt-OPTIONS-200",
            "resource_id": "o554kt",
            "response_models": {
              "application/json": "Empty"
            },
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "rest_api_id": "cypom236ui",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method_response",
      "name": "cors_statements_method_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_method": "OPTIONS",
            "id": "agmr-cypom236ui-8bi5al-OPTIONS-200",
            "resource_id": "8bi5al",
            "response_models": {
              "application/json": "Empty"
            },
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "rest_api_id": "cypom236ui",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method_response",
      "name": "cors_upload_method_response",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_method": "OPTIONS",
            "id": "agmr-cypom236ui-7luzob-OPTIONS-200",
            "resource_id": "7luzob",
            "response_models": {
              "application/json": "Empty"
            },
            "response_parameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "rest_api_id": "cypom236ui",
            "status_code": "200"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_method_settings",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cypom236ui-dev-*/*",
            "method_path": "*/*",
            "rest_api_id": "cypom236ui",
            "settings": [
              {
                "cache_data_encrypted": false,
                "cache_ttl_in_seconds": 300,
                "caching_enabled": false,
                "data_trace_enabled": false,
                "logging_level": "INFO",
                "metrics_enabled": true,
                "require_authorization_for_cache_control": true,
                "throttling_burst_limit": 50,
                "throttling_rate_limit": 100,
                "unauthorized_cache_control_header_strategy": "SUCCEED_WITH_RESPONSE_HEADER"
              }
            ],
            "stage_name": "dev"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "pdf",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "1qt1d7",
            "parent_id": "y7ovgdpsvh",
            "path": "/pdf",
            "path_part": "pdf",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "pdf_job_id",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "wp86tw",
            "parent_id": "1qt1d7",
            "path": "/pdf/{job_id}",
            "path_part": "{job_id}",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "proxy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "gjh0md",
            "parent_id": "y7ovgdpsvh",
            "path": "/{proxy+}",
            "path_part": "{proxy+}",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "statements",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8bi5al",
            "parent_id": "y7ovgdpsvh",
            "path": "/statements",
            "path_part": "statements",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "statements_csv",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "rpsd1w",
            "parent_id": "8bi5al",
            "path": "/statements/csv",
            "path_part": "csv",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "statements_csv_job_id",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "li0swx",
            "parent_id": "rpsd1w",
            "path": "/statements/csv/{job_id}",
            "path_part": "{job_id}",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "statements_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "o554kt",
            "parent_id": "8bi5al",
            "path": "/statements/data",
            "path_part": "data",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_resource",
      "name": "upload",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "7luzob",
            "parent_id": "y7ovgdpsvh",
            "path": "/upload",
            "path_part": "upload",
            "rest_api_id": "cypom236ui"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_rest_api",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_key_source": "HEADER",
            "arn": "arn:aws:apigateway:us-east-1::/restapis/cypom236ui",
            "binary_media_types": [
              "application/pdf",
              "application/x-pdf",
              "multipart/form-data"
            ],
            "body": null,
            "created_date": "2025-09-17T00:52:19Z",
            "description": "PDF Extractor API",
            "disable_execute_api_endpoint": false,
            "endpoint_configuration": [
              {
                "ip_address_type": "ipv4",
                "types": [
                  "REGIONAL"
                ],
                "vpc_endpoint_ids": []
              }
            ],
            "execution_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui",
            "fail_on_warnings": null,
            "id": "cypom236ui",
            "minimum_compression_size": "",
            "name": "pdf-extractor-api-api",
            "parameters": null,
            "policy": "",
            "put_rest_api_mode": null,
            "root_resource_id": "y7ovgdpsvh",
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-api",
              "Project": "pdf-extractor-api",
              "Type": "API-Gateway"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-api",
              "Project": "pdf-extractor-api",
              "Type": "API-Gateway"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_stage",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_log_settings": [
              {
                "destination_arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/apigateway/pdf-extractor-api-api",
                "format": "{\"caller\":\"$context.identity.caller\",\"error\":\"$context.error.message\",\"errorValidation\":\"$context.error.validationErrorString\",\"httpMethod\":\"$context.httpMethod\",\"ip\":\"$context.identity.sourceIp\",\"protocol\":\"$context.protocol\",\"requestId\":\"$context.requestId\",\"requestTime\":\"$context.requestTime\",\"resourcePath\":\"$context.resourcePath\",\"responseLength\":\"$context.responseLength\",\"status\":\"$context.status\",\"user\":\"$context.identity.user\"}"
              }
            ],
            "arn": "arn:aws:apigateway:us-east-1::/restapis/cypom236ui/stages/dev",
            "cache_cluster_enabled": false,
            "cache_cluster_size": "",
            "canary_settings": [],
            "client_certificate_id": "",
            "deployment_id": "1ug026",
            "description": "",
            "documentation_version": "",
            "execution_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui/dev",
            "id": "ags-cypom236ui-dev",
            "invoke_url": "https://cypom236ui.execute-api.us-east-1.amazonaws.com/dev",
            "rest_api_id": "cypom236ui",
            "stage_name": "dev",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "variables": {},
            "web_acl_arn": "",
            "xray_tracing_enabled": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_usage_plan",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "api_stages": [
              {
                "api_id": "cypom236ui",
                "stage": "dev",
                "throttle": []
              }
            ],
            "arn": "arn:aws:apigateway:us-east-1::/usageplans/yg11up",
            "description": "",
            "id": "yg11up",
            "name": "pdf-extractor-api-usage-plan",
            "product_code": "",
            "quota_settings": [
              {
                "limit": 1000,
                "offset": 0,
                "period": "DAY"
              }
            ],
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "throttle_settings": [
              {
                "burst_limit": 50,
                "rate_limit": 100
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_api_gateway_usage_plan_key",
      "name": "api_key_association",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "f44ywxfkz1",
            "key_id": "f44ywxfkz1",
            "key_type": "API_KEY",
            "name": "pdf-extractor-api-api-key",
            "usage_plan_id": "yg11up",
            "value": "D2L3T4ryap6pbW4bwj1Mc4yfUY5uA2sladoCr53j"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "api_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/apigateway/pdf-extractor-api-api",
            "id": "/aws/apigateway/pdf-extractor-api-api",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/apigateway/pdf-extractor-api-api",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "api_gateway_cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::855212953422:role/pdf-extractor-api-api-gateway-cloudwatch",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-09-17T00:52:19Z",
            "description": "",
            "force_detach_policies": false,
            "id": "pdf-extractor-api-api-gateway-cloudwatch",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
            ],
            "max_session_duration": 3600,
            "name": "pdf-extractor-api-api-gateway-cloudwatch",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "unique_id": "AROA4OHVKB5HDCVGYMM4L"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "api_gateway_cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pdf-extractor-api-api-gateway-cloudwatch-20250917005219552900000007",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
            "role": "pdf-extractor-api-api-gateway-cloudwatch"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "api_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "pdf-extractor-api-api",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui/*/*",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "csv_export_api_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "pdf-extractor-api-csv-export",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui/*/GET/statements/csv/*",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "pdf_viewer_api_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "pdf-extractor-api-pdf-viewer",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui/*/GET/pdf/*",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "statements_data_api_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "pdf-extractor-api-statement-data",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui/*/GET/statements/data",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.api_gateway",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "upload_api_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "pdf-extractor-api-upload",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromAPIGateway",
            "principal": "apigateway.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:execute-api:us-east-1:855212953422:cypom236ui/*/*",
            "statement_id": "AllowExecutionFromAPIGateway",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.dynamodb",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "jobs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-jobs",
            "attribute": [
              {
                "name": "created_at",
                "type": "S"
              },
              {
                "name": "job_id",
                "type": "S"
              },
              {
                "name": "status",
                "type": "S"
              },
              {
                "name": "user_id",
                "type": "S"
              }
            ],
            "billing_mode": "PAY_PER_REQUEST",
            "deletion_protection_enabled": false,
            "global_secondary_index": [
              {
                "hash_key": "status",
                "name": "status-index",
                "non_key_attributes": [],
                "on_demand_throughput": [],
                "projection_type": "ALL",
                "range_key": "created_at",
                "read_capacity": 0,
                "write_capacity": 0
              },
              {
                "hash_key": "user_id",
                "name": "user-jobs-index",
                "non_key_attributes": [],
                "on_demand_throughput": [],
                "projection_type": "ALL",
                "range_key": "created_at",
                "read_capacity": 0,
                "write_capacity": 0
              }
            ],
            "hash_key": "job_id",
            "id": "pdf-extractor-api-jobs",
            "import_table": [],
            "local_secondary_index": [],
            "name": "pdf-extractor-api-jobs",
            "on_demand_throughput": [],
            "point_in_time_recovery": [
              {
                "enabled": true,
                "recovery_period_in_days": 35
              }
            ],
            "range_key": null,
            "read_capacity": 0,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_source_table_arn": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-jobs",
              "Project": "pdf-extractor-api",
              "Type": "DynamoDB"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-jobs",
              "Project": "pdf-extractor-api",
              "Type": "DynamoDB"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "expires_at",
                "enabled": true
              }
            ],
            "write_capacity": 0
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.dynamodb",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "transactions",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-transactions",
            "attribute": [
              {
                "name": "created_at",
                "type": "S"
              },
              {
                "name": "transaction_id",
                "type": "S"
              },
              {
                "name": "user_id",
                "type": "S"
              }
            ],
            "billing_mode": "PAY_PER_REQUEST",
            "deletion_protection_enabled": false,
            "global_secondary_index": [
              {
                "hash_key": "user_id",
                "name": "user-transactions-index",
                "non_key_attributes": [],
                "on_demand_throughput": [],
                "projection_type": "ALL",
                "range_key": "created_at",
                "read_capacity": 0,
                "write_capacity": 0
              }
            ],
            "hash_key": "transaction_id",
            "id": "pdf-extractor-api-transactions",
            "import_table": [],
            "local_secondary_index": [],
            "name": "pdf-extractor-api-transactions",
            "on_demand_throughput": [],
            "point_in_time_recovery": [
              {
                "enabled": true,
                "recovery_period_in_days": 35
              }
            ],
            "range_key": null,
            "read_capacity": 0,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_source_table_arn": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-transactions",
              "Project": "pdf-extractor-api",
              "Type": "DynamoDB"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-transactions",
              "Project": "pdf-extractor-api",
              "Type": "DynamoDB"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "expires_at",
                "enabled": true
              }
            ],
            "write_capacity": 0
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.dynamodb",
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "usage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-usage",
            "attribute": [
              {
                "name": "time_window",
                "type": "S"
              },
              {
                "name": "user_id",
                "type": "S"
              }
            ],
            "billing_mode": "PAY_PER_REQUEST",
            "deletion_protection_enabled": false,
            "global_secondary_index": [],
            "hash_key": "user_id",
            "id": "pdf-extractor-api-usage",
            "import_table": [],
            "local_secondary_index": [],
            "name": "pdf-extractor-api-usage",
            "on_demand_throughput": [],
            "point_in_time_recovery": [
              {
                "enabled": true,
                "recovery_period_in_days": 35
              }
            ],
            "range_key": "time_window",
            "read_capacity": 0,
            "replica": [],
            "restore_date_time": null,
            "restore_source_name": null,
            "restore_source_table_arn": null,
            "restore_to_latest_time": null,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "table_class": "STANDARD",
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-usage",
              "Project": "pdf-extractor-api",
              "Type": "DynamoDB"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-usage",
              "Project": "pdf-extractor-api",
              "Type": "DynamoDB"
            },
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "expires_at",
                "enabled": true
              }
            ],
            "write_capacity": 0
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_cloudfront_distribution",
      "name": "ui_distribution",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "aliases": [],
            "arn": "arn:aws:cloudfront::855212953422:distribution/E9KXLSRFTJ38Z",
            "caller_reference": "terraform-20250917224708934400000001",
            "comment": "PDF Extractor UI Distribution",
            "continuous_deployment_policy_id": "",
            "custom_error_response": [
              {
                "error_caching_min_ttl": 0,
                "error_code": 403,
                "response_code": 200,
                "response_page_path": "/index.html"
              },
              {
                "error_caching_min_ttl": 0,
                "error_code": 404,
                "response_code": 200,
                "response_page_path": "/index.html"
              }
            ],
            "default_cache_behavior": [
              {
                "allowed_methods": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "OPTIONS",
                  "PATCH",
                  "POST",
                  "PUT"
                ],
                "cache_policy_id": "",
                "cached_methods": [
                  "GET",
                  "HEAD"
                ],
                "compress": false,
                "default_ttl": 3600,
                "field_level_encryption_id": "",
                "forwarded_values": [
                  {
                    "cookies": [
                      {
                        "forward": "none",
                        "whitelisted_names": []
                      }
                    ],
                    "headers": [],
                    "query_string": false,
                    "query_string_cache_keys": []
                  }
                ],
                "function_association": [],
                "grpc_config": [
                  {
                    "enabled": false
                  }
                ],
                "lambda_function_association": [],
                "max_ttl": 86400,
                "min_ttl": 0,
                "origin_request_policy_id": "",
                "realtime_log_config_arn": "",
                "response_headers_policy_id": "62944f38-eb11-4068-9893-e89d39fd76ae",
                "smooth_streaming": false,
                "target_origin_id": "S3-pdf-extractor-api-ui-static",
                "trusted_key_groups": [],
                "trusted_signers": [],
                "viewer_protocol_policy": "redirect-to-https"
              }
            ],
            "default_root_object": "index.html",
            "domain_name": "d300pkcz1cpyay.cloudfront.net",
            "enabled": true,
            "etag": "E3S1PS5DGE8KTN",
            "hosted_zone_id": "Z2FDTNDATAQYW2",
            "http_version": "http2",
            "id": "E9KXLSRFTJ38Z",
            "in_progress_validation_batches": 0,
            "is_ipv6_enabled": true,
            "last_modified_time": "2025-09-17 22:47:09.225 +0000 UTC",
            "logging_config": [],
            "ordered_cache_behavior": [
              {
                "allowed_methods": [
                  "GET",
                  "HEAD",
                  "OPTIONS"
                ],
                "cache_policy_id": "",
                "cached_methods": [
                  "GET",
                  "HEAD"
                ],
                "compress": true,
                "default_ttl": 86400,
                "field_level_encryption_id": "",
                "forwarded_values": [
                  {
                    "cookies": [
                      {
                        "forward": "none",
                        "whitelisted_names": []
                      }
                    ],
                    "headers": [
                      "Origin"
                    ],
                    "query_string": false,
                    "query_string_cache_keys": []
                  }
                ],
                "function_association": [],
                "grpc_config": [
                  {
                    "enabled": false
                  }
                ],
                "lambda_function_association": [],
                "max_ttl": 31536000,
                "min_ttl": 0,
                "origin_request_policy_id": "",
                "path_pattern": "/assets/*",
                "realtime_log_config_arn": "",
                "response_headers_policy_id": "",
                "smooth_streaming": false,
                "target_origin_id": "S3-pdf-extractor-api-ui-static",
                "trusted_key_groups": [],
                "trusted_signers": [],
                "viewer_protocol_policy": "redirect-to-https"
              }
            ],
            "origin": [
              {
                "connection_attempts": 3,
                "connection_timeout": 10,
                "custom_header": [],
                "custom_origin_config": [],
                "domain_name": "pdf-extractor-api-ui-static.s3.us-east-1.amazonaws.com",
                "origin_access_control_id": "E1JJ7N54BX64RR",
                "origin_id": "S3-pdf-extractor-api-ui-static",
                "origin_path": "",
                "origin_shield": [],
                "s3_origin_config": [],
                "vpc_origin_config": []
              }
            ],
            "origin_group": [],
            "price_class": "PriceClass_100",
            "restrictions": [
              {
                "geo_restriction": [
                  {
                    "locations": [],
                    "restriction_type": "none"
                  }
                ]
              }
            ],
            "retain_on_delete": false,
            "staging": false,
            "status": "Deployed",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "trusted_key_groups": [
              {
                "enabled": false,
                "items": []
              }
            ],
            "trusted_signers": [
              {
                "enabled": false,
                "items": []
              }
            ],
            "viewer_certificate": [
              {
                "acm_certificate_arn": "",
                "cloudfront_default_certificate": true,
                "iam_certificate_id": "",
                "minimum_protocol_version": "TLSv1",
                "ssl_support_method": ""
              }
            ],
            "wait_for_deployment": true,
            "web_acl_id": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_cloudfront_origin_access_control.ui_oac",
            "module.frontend.aws_cloudfront_response_headers_policy.security_headers",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_cloudfront_origin_access_control",
      "name": "ui_oac",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:cloudfront::855212953422:origin-access-control/E1JJ7N54BX64RR",
            "description": "Origin Access Control for PDF Extractor UI",
            "etag": "ETVPDKIKX0DER",
            "id": "E1JJ7N54BX64RR",
            "name": "pdf-extractor-api-ui-oac",
            "origin_access_control_origin_type": "s3",
            "signing_behavior": "always",
            "signing_protocol": "sigv4"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_cloudfront_response_headers_policy",
      "name": "security_headers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:cloudfront::855212953422:response-headers-policy/62944f38-eb11-4068-9893-e89d39fd76ae",
            "comment": "Security headers for PDF Extractor UI",
            "cors_config": [
              {
                "access_control_allow_credentials": false,
                "access_control_allow_headers": [
                  {
                    "items": [
                      "*"
                    ]
                  }
                ],
                "access_control_allow_methods": [
                  {
                    "items": [
                      "ALL"
                    ]
                  }
                ],
                "access_control_allow_origins": [
                  {
                    "items": [
                      "*"
                    ]
                  }
                ],
                "access_control_expose_headers": [],
                "access_control_max_age_sec": 0,
                "origin_override": true
              }
            ],
            "custom_headers_config": [],
            "etag": "E3UN6WX5RRO2AG",
            "id": "62944f38-eb11-4068-9893-e89d39fd76ae",
            "name": "pdf-extractor-api-ui-security-headers",
            "remove_headers_config": [],
            "security_headers_config": [
              {
                "content_security_policy": [
                  {
                    "content_security_policy": "default-src * 'unsafe-inline' 'unsafe-eval' data: blob:;",
                    "override": true
                  }
                ],
                "content_type_options": [
                  {
                    "override": true
                  }
                ],
                "frame_options": [
                  {
                    "frame_option": "DENY",
                    "override": true
                  }
                ],
                "referrer_policy": [
                  {
                    "override": true,
                    "referrer_policy": "strict-origin-when-cross-origin"
                  }
                ],
                "strict_transport_security": [
                  {
                    "access_control_max_age_sec": 31536000,
                    "include_subdomains": true,
                    "override": true,
                    "preload": false
                  }
                ],
                "xss_protection": []
              }
            ],
            "server_timing_headers_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "ui_bucket",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::pdf-extractor-api-ui-static",
            "bucket": "pdf-extractor-api-ui-static",
            "bucket_domain_name": "pdf-extractor-api-ui-static.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "pdf-extractor-api-ui-static.s3.us-east-1.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "grant": [
              {
                "id": "f23570cfe444b1c8be4a024ae300950b44ba66de4b72c27ec1eda71aab2e728f",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "pdf-extractor-api-ui-static",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Condition\":{\"StringEquals\":{\"AWS:SourceArn\":\"arn:aws:cloudfront::855212953422:distribution/E9KXLSRFTJ38Z\"}},\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"cloudfront.amazonaws.com\"},\"Resource\":\"arn:aws:s3:::pdf-extractor-api-ui-static/*\",\"Sid\":\"AllowCloudFrontServicePrincipal\"}],\"Version\":\"2012-10-17\"}",
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": false
                  }
                ]
              }
            ],
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "timeouts": null,
            "versioning": [
              {
                "enabled": true,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_s3_bucket_policy",
      "name": "ui_bucket_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "pdf-extractor-api-ui-static",
            "id": "pdf-extractor-api-ui-static",
            "policy": "{\"Statement\":[{\"Action\":\"s3:GetObject\",\"Condition\":{\"StringEquals\":{\"AWS:SourceArn\":\"arn:aws:cloudfront::855212953422:distribution/E9KXLSRFTJ38Z\"}},\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"cloudfront.amazonaws.com\"},\"Resource\":\"arn:aws:s3:::pdf-extractor-api-ui-static/*\",\"Sid\":\"AllowCloudFrontServicePrincipal\"}],\"Version\":\"2012-10-17\"}"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_cloudfront_distribution.ui_distribution",
            "module.frontend.aws_cloudfront_origin_access_control.ui_oac",
            "module.frontend.aws_cloudfront_response_headers_policy.security_headers",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "ui_bucket_pab",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": true,
            "block_public_policy": true,
            "bucket": "pdf-extractor-api-ui-static",
            "id": "pdf-extractor-api-ui-static",
            "ignore_public_acls": true,
            "restrict_public_buckets": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_s3_bucket_server_side_encryption_configuration",
      "name": "ui_bucket_encryption",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "pdf-extractor-api-ui-static",
            "expected_bucket_owner": "",
            "id": "pdf-extractor-api-ui-static",
            "rule": [
              {
                "apply_server_side_encryption_by_default": [
                  {
                    "kms_master_key_id": "",
                    "sse_algorithm": "AES256"
                  }
                ],
                "bucket_key_enabled": false
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_s3_bucket_versioning",
      "name": "ui_bucket_versioning",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "pdf-extractor-api-ui-static",
            "expected_bucket_owner": "",
            "id": "pdf-extractor-api-ui-static",
            "mfa": null,
            "versioning_configuration": [
              {
                "mfa_delete": "",
                "status": "Enabled"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "aws_s3_object",
      "name": "ui_files",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": "assets/index-Dch2F4OT.js",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::pdf-extractor-api-ui-static/assets/index-Dch2F4OT.js",
            "bucket": "pdf-extractor-api-ui-static",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_crc64nvme": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/javascript",
            "etag": "c7d12808fc7708788650e4cd489ddc6a",
            "force_destroy": false,
            "id": "assets/index-Dch2F4OT.js",
            "key": "assets/index-Dch2F4OT.js",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "AES256",
            "source": "../ui/dist/assets/index-Dch2F4OT.js",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "version_id": "gxeVihBhep5flTDZ7xSYTROarrlaD3Ry",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.frontend.null_resource.build_frontend",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        },
        {
          "index_key": "assets/index-nvmUd_u9.css",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::pdf-extractor-api-ui-static/assets/index-nvmUd_u9.css",
            "bucket": "pdf-extractor-api-ui-static",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_crc64nvme": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/css",
            "etag": "be7430fc7378c80380522e11fcc13bda",
            "force_destroy": false,
            "id": "assets/index-nvmUd_u9.css",
            "key": "assets/index-nvmUd_u9.css",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "AES256",
            "source": "../ui/dist/assets/index-nvmUd_u9.css",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "version_id": "K2MKMZnyOt24lSq0n839CJ1oKBlSnApu",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.frontend.null_resource.build_frontend",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        },
        {
          "index_key": "favicon.svg",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::pdf-extractor-api-ui-static/favicon.svg",
            "bucket": "pdf-extractor-api-ui-static",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_crc64nvme": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "image/svg+xml",
            "etag": "e8a3996d9bf0ce5b715d389a9bf2944a",
            "force_destroy": false,
            "id": "favicon.svg",
            "key": "favicon.svg",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "AES256",
            "source": "../ui/dist/favicon.svg",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "version_id": "9inqHILRgvr6nAQsf3Ee9RMJjY9VUdIA",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.frontend.null_resource.build_frontend",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        },
        {
          "index_key": "index.html",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::pdf-extractor-api-ui-static/index.html",
            "bucket": "pdf-extractor-api-ui-static",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_crc64nvme": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/html",
            "etag": "0c3dda02ba917d61635ede4f8c41af53",
            "force_destroy": false,
            "id": "index.html",
            "key": "index.html",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "AES256",
            "source": "../ui/dist/index.html",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "version_id": "xff6eQ2vEyTEwbi3cVdQkumTiSxkp1xC",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.frontend.null_resource.build_frontend",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        },
        {
          "index_key": "pdf.worker.min.js",
          "schema_version": 0,
          "attributes": {
            "acl": null,
            "arn": "arn:aws:s3:::pdf-extractor-api-ui-static/pdf.worker.min.js",
            "bucket": "pdf-extractor-api-ui-static",
            "bucket_key_enabled": false,
            "cache_control": "",
            "checksum_algorithm": null,
            "checksum_crc32": "",
            "checksum_crc32c": "",
            "checksum_crc64nvme": "",
            "checksum_sha1": "",
            "checksum_sha256": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/javascript",
            "etag": "c8a7c3f3c287e5b29ecc6f4dec2e9814",
            "force_destroy": false,
            "id": "pdf.worker.min.js",
            "key": "pdf.worker.min.js",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "override_provider": [],
            "server_side_encryption": "AES256",
            "source": "../ui/dist/pdf.worker.min.js",
            "source_hash": null,
            "storage_class": "STANDARD",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "version_id": "hxwrRN.PMNa7Q1v4hUcQre7lCyqBt2T3",
            "website_redirect": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.frontend.aws_s3_bucket.ui_bucket",
            "module.frontend.null_resource.build_frontend",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.frontend",
      "mode": "managed",
      "type": "null_resource",
      "name": "build_frontend",
      "provider": "provider[\"registry.terraform.io/hashicorp/null\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8436373865434837466",
            "triggers": {
              "api_gateway_url": "https://cypom236ui.execute-api.us-east-1.amazonaws.com/dev",
              "api_key_hash": "ea19b0e82cf2277f0aa7d99c4c0937ef02ec58e076ce634935bc3aa8c24ac8fd"
            }
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "triggers"
              },
              {
                "type": "index",
                "value": {
                  "value": "api_key_hash",
                  "type": "string"
                }
              }
            ]
          ],
          "identity_schema_version": 0,
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.api_gateway.aws_api_gateway_account.api",
            "module.api_gateway.aws_api_gateway_api_key.api_key",
            "module.api_gateway.aws_api_gateway_deployment.api",
            "module.api_gateway.aws_api_gateway_integration.cors_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_root_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_statements_integration",
            "module.api_gateway.aws_api_gateway_integration.cors_upload_integration",
            "module.api_gateway.aws_api_gateway_integration.pdf_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_integration",
            "module.api_gateway.aws_api_gateway_integration.proxy_root_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_csv_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_data_integration",
            "module.api_gateway.aws_api_gateway_integration.statements_integration",
            "module.api_gateway.aws_api_gateway_integration.upload_integration",
            "module.api_gateway.aws_api_gateway_integration_response.cors_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_pdf_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_root_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_csv_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_data_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_statements_integration_response",
            "module.api_gateway.aws_api_gateway_integration_response.cors_upload_integration_response",
            "module.api_gateway.aws_api_gateway_method.cors_method",
            "module.api_gateway.aws_api_gateway_method.cors_pdf_method",
            "module.api_gateway.aws_api_gateway_method.cors_root_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_data_method",
            "module.api_gateway.aws_api_gateway_method.cors_statements_method",
            "module.api_gateway.aws_api_gateway_method.cors_upload_method",
            "module.api_gateway.aws_api_gateway_method.pdf_method",
            "module.api_gateway.aws_api_gateway_method.proxy_method",
            "module.api_gateway.aws_api_gateway_method.proxy_root_method",
            "module.api_gateway.aws_api_gateway_method.statements_csv_method",
            "module.api_gateway.aws_api_gateway_method.statements_data_method",
            "module.api_gateway.aws_api_gateway_method.statements_method",
            "module.api_gateway.aws_api_gateway_method.upload_method",
            "module.api_gateway.aws_api_gateway_method_response.cors_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_pdf_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_root_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_csv_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_data_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_statements_method_response",
            "module.api_gateway.aws_api_gateway_method_response.cors_upload_method_response",
            "module.api_gateway.aws_api_gateway_method_settings.api",
            "module.api_gateway.aws_api_gateway_resource.pdf",
            "module.api_gateway.aws_api_gateway_resource.pdf_job_id",
            "module.api_gateway.aws_api_gateway_resource.proxy",
            "module.api_gateway.aws_api_gateway_resource.statements",
            "module.api_gateway.aws_api_gateway_resource.statements_csv",
            "module.api_gateway.aws_api_gateway_resource.statements_csv_job_id",
            "module.api_gateway.aws_api_gateway_resource.statements_data",
            "module.api_gateway.aws_api_gateway_resource.upload",
            "module.api_gateway.aws_api_gateway_rest_api.api",
            "module.api_gateway.aws_api_gateway_stage.api",
            "module.api_gateway.aws_api_gateway_usage_plan.api",
            "module.api_gateway.aws_api_gateway_usage_plan_key.api_key_association",
            "module.api_gateway.aws_cloudwatch_log_group.api_gateway",
            "module.api_gateway.aws_iam_role.api_gateway_cloudwatch",
            "module.api_gateway.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.api_gateway.aws_lambda_permission.api_gateway",
            "module.api_gateway.aws_lambda_permission.csv_export_api_gateway",
            "module.api_gateway.aws_lambda_permission.pdf_viewer_api_gateway",
            "module.api_gateway.aws_lambda_permission.statements_data_api_gateway",
            "module.api_gateway.aws_lambda_permission.upload_api_gateway",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_cloudwatch_event_target.cleanup_target",
            "module.lambda.aws_cloudwatch_log_group.api",
            "module.lambda.aws_cloudwatch_log_group.cleanup",
            "module.lambda.aws_cloudwatch_log_group.csv_export",
            "module.lambda.aws_cloudwatch_log_group.dlq_processor",
            "module.lambda.aws_cloudwatch_log_group.pdf_viewer",
            "module.lambda.aws_cloudwatch_log_group.processor",
            "module.lambda.aws_cloudwatch_log_group.statement_data",
            "module.lambda.aws_cloudwatch_log_group.upload",
            "module.lambda.aws_lambda_event_source_mapping.dlq_processor_sqs",
            "module.lambda.aws_lambda_event_source_mapping.processor_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda.aws_lambda_permission.allow_cloudwatch_cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ]
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cloudwatch_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::855212953422:policy/pdf-extractor-api-cloudwatch-policy",
            "attachment_count": 1,
            "description": "Enhanced CloudWatch logging policy for Lambda",
            "id": "arn:aws:iam::855212953422:policy/pdf-extractor-api-cloudwatch-policy",
            "name": "pdf-extractor-api-cloudwatch-policy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"logs:CreateLogGroup\",\"logs:CreateLogStream\",\"logs:PutLogEvents\",\"logs:DescribeLogGroups\",\"logs:DescribeLogStreams\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4OHVKB5HD3JHPD3TT",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "dynamodb_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::855212953422:policy/pdf-extractor-api-dynamodb-policy",
            "attachment_count": 1,
            "description": "Policy for Lambda to access DynamoDB tables",
            "id": "arn:aws:iam::855212953422:policy/pdf-extractor-api-dynamodb-policy",
            "name": "pdf-extractor-api-dynamodb-policy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"dynamodb:GetItem\",\"dynamodb:PutItem\",\"dynamodb:UpdateItem\",\"dynamodb:DeleteItem\",\"dynamodb:Query\",\"dynamodb:Scan\",\"dynamodb:BatchGetItem\",\"dynamodb:BatchWriteItem\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-jobs\",\"arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-transactions\",\"arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-usage\",\"arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-jobs/index/*\",\"arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-transactions/index/*\",\"arn:aws:dynamodb:us-east-1:855212953422:table/pdf-extractor-api-usage/index/*\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4OHVKB5HAUPH5CPOS",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "s3_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::855212953422:policy/pdf-extractor-api-s3-policy",
            "attachment_count": 1,
            "description": "Policy for Lambda to access S3 bucket",
            "id": "arn:aws:iam::855212953422:policy/pdf-extractor-api-s3-policy",
            "name": "pdf-extractor-api-s3-policy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"s3:GetObject\",\"s3:PutObject\",\"s3:DeleteObject\",\"s3:ListBucket\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::pdf-extractor-api-storage\",\"arn:aws:s3:::pdf-extractor-api-storage/*\"]},{\"Action\":[\"s3:GetObjectVersion\",\"s3:ListBucketVersions\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::pdf-extractor-api-storage\",\"arn:aws:s3:::pdf-extractor-api-storage/*\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4OHVKB5HOXRD7DAMQ",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "sqs_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::855212953422:policy/pdf-extractor-api-sqs-policy",
            "attachment_count": 1,
            "description": "Policy for Lambda to access SQS queues",
            "id": "arn:aws:iam::855212953422:policy/pdf-extractor-api-sqs-policy",
            "name": "pdf-extractor-api-sqs-policy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"sqs:SendMessage\",\"sqs:ReceiveMessage\",\"sqs:DeleteMessage\",\"sqs:GetQueueAttributes\",\"sqs:ChangeMessageVisibility\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-processing\",\"arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq\"]}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPA4OHVKB5HAIEKQMPAK",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "api_gateway_cloudwatch_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::855212953422:role/pdf-extractor-api-apigateway-cloudwatch-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-09-17T00:51:28Z",
            "description": "",
            "force_detach_policies": false,
            "id": "pdf-extractor-api-apigateway-cloudwatch-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
            ],
            "max_session_duration": 3600,
            "name": "pdf-extractor-api-apigateway-cloudwatch-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-apigateway-cloudwatch-role",
              "Project": "pdf-extractor-api",
              "Type": "IAM-Role"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-apigateway-cloudwatch-role",
              "Project": "pdf-extractor-api",
              "Type": "IAM-Role"
            },
            "unique_id": "AROA4OHVKB5HEDOJI6UIF"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "lambda_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2025-09-17T00:51:28Z",
            "description": "",
            "force_detach_policies": false,
            "id": "pdf-extractor-api-lambda-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::855212953422:policy/pdf-extractor-api-cloudwatch-policy",
              "arn:aws:iam::855212953422:policy/pdf-extractor-api-dynamodb-policy",
              "arn:aws:iam::855212953422:policy/pdf-extractor-api-s3-policy",
              "arn:aws:iam::855212953422:policy/pdf-extractor-api-sqs-policy",
              "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
            ],
            "max_session_duration": 3600,
            "name": "pdf-extractor-api-lambda-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-lambda-role",
              "Project": "pdf-extractor-api",
              "Type": "IAM-Role"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-lambda-role",
              "Project": "pdf-extractor-api",
              "Type": "IAM-Role"
            },
            "unique_id": "AROA4OHVKB5HHRKQ44VOO"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "api_gateway_cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pdf-extractor-api-apigateway-cloudwatch-role-20250917005128984400000002",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
            "role": "pdf-extractor-api-apigateway-cloudwatch-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_basic",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pdf-extractor-api-lambda-role-20250917005129001100000003",
            "policy_arn": "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
            "role": "pdf-extractor-api-lambda-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_role.lambda_role",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_cloudwatch",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pdf-extractor-api-lambda-role-20250917005128966900000001",
            "policy_arn": "arn:aws:iam::855212953422:policy/pdf-extractor-api-cloudwatch-policy",
            "role": "pdf-extractor-api-lambda-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_role.lambda_role",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_dynamodb",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pdf-extractor-api-lambda-role-20250917005129012500000005",
            "policy_arn": "arn:aws:iam::855212953422:policy/pdf-extractor-api-dynamodb-policy",
            "role": "pdf-extractor-api-lambda-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_role.lambda_role",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_s3",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pdf-extractor-api-lambda-role-20250917005129001100000004",
            "policy_arn": "arn:aws:iam::855212953422:policy/pdf-extractor-api-s3-policy",
            "role": "pdf-extractor-api-lambda-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_role.lambda_role",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.iam",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "lambda_sqs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "pdf-extractor-api-lambda-role-20250917005129191000000006",
            "policy_arn": "arn:aws:iam::855212953422:policy/pdf-extractor-api-sqs-policy",
            "role": "pdf-extractor-api-lambda-role"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.lambda_role",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_event_rule",
      "name": "cleanup_schedule",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:events:us-east-1:855212953422:rule/pdf-extractor-api-cleanup-schedule",
            "description": "Daily cleanup of old files and records",
            "event_bus_name": "default",
            "event_pattern": null,
            "force_destroy": false,
            "id": "pdf-extractor-api-cleanup-schedule",
            "is_enabled": true,
            "name": "pdf-extractor-api-cleanup-schedule",
            "name_prefix": "",
            "role_arn": "",
            "schedule_expression": "cron(0 2 * * ? *)",
            "state": "ENABLED",
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_event_target",
      "name": "cleanup_target",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "appsync_target": [],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-cleanup",
            "batch_target": [],
            "dead_letter_config": [],
            "ecs_target": [],
            "event_bus_name": "default",
            "force_destroy": false,
            "http_target": [],
            "id": "pdf-extractor-api-cleanup-schedule-CleanupTarget",
            "input": "",
            "input_path": "",
            "input_transformer": [],
            "kinesis_target": [],
            "redshift_target": [],
            "retry_policy": [],
            "role_arn": "",
            "rule": "pdf-extractor-api-cleanup-schedule",
            "run_command_targets": [],
            "sagemaker_pipeline_target": [],
            "sqs_target": [],
            "target_id": "CleanupTarget"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-api",
            "id": "/aws/lambda/pdf-extractor-api-api",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/lambda/pdf-extractor-api-api",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.api",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "cleanup",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-cleanup",
            "id": "/aws/lambda/pdf-extractor-api-cleanup",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/lambda/pdf-extractor-api-cleanup",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "csv_export",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-csv-export",
            "id": "/aws/lambda/pdf-extractor-api-csv-export",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/lambda/pdf-extractor-api-csv-export",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.csv_export",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "dlq_processor",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-dlq-processor",
            "id": "/aws/lambda/pdf-extractor-api-dlq-processor",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/lambda/pdf-extractor-api-dlq-processor",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "pdf_viewer",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-pdf-viewer",
            "id": "/aws/lambda/pdf-extractor-api-pdf-viewer",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/lambda/pdf-extractor-api-pdf-viewer",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.pdf_viewer",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "processor",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-processor",
            "id": "/aws/lambda/pdf-extractor-api-processor",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/lambda/pdf-extractor-api-processor",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "statement_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-statement-data",
            "id": "/aws/lambda/pdf-extractor-api-statement-data",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/lambda/pdf-extractor-api-statement-data",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.statement_data",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_cloudwatch_log_group",
      "name": "upload",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:logs:us-east-1:855212953422:log-group:/aws/lambda/pdf-extractor-api-upload",
            "id": "/aws/lambda/pdf-extractor-api-upload",
            "kms_key_id": "",
            "log_group_class": "STANDARD",
            "name": "/aws/lambda/pdf-extractor-api-upload",
            "name_prefix": "",
            "retention_in_days": 7,
            "skip_destroy": false,
            "tags": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.upload",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_event_source_mapping",
      "name": "dlq_processor_sqs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "amazon_managed_kafka_event_source_config": [],
            "arn": "arn:aws:lambda:us-east-1:855212953422:event-source-mapping:94e85677-abe9-48fb-a09a-f72a020c7b0c",
            "batch_size": 1,
            "bisect_batch_on_function_error": false,
            "destination_config": [],
            "document_db_event_source_config": [],
            "enabled": true,
            "event_source_arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq",
            "filter_criteria": [],
            "function_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-dlq-processor",
            "function_name": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-dlq-processor",
            "function_response_types": [],
            "id": "94e85677-abe9-48fb-a09a-f72a020c7b0c",
            "kms_key_arn": "",
            "last_modified": "2025-09-17T00:51:55Z",
            "last_processing_result": "",
            "maximum_batching_window_in_seconds": 60,
            "maximum_record_age_in_seconds": 0,
            "maximum_retry_attempts": 0,
            "metrics_config": [],
            "parallelization_factor": 0,
            "provisioned_poller_config": [],
            "queues": [],
            "scaling_config": [],
            "self_managed_event_source": [],
            "self_managed_kafka_event_source_config": [],
            "source_access_configuration": [],
            "starting_position": "",
            "starting_position_timestamp": "",
            "state": "Enabled",
            "state_transition_reason": "USER_INITIATED",
            "tags": {},
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "topics": [],
            "tumbling_window_in_seconds": 0,
            "uuid": "94e85677-abe9-48fb-a09a-f72a020c7b0c"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.dlq_processor",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_event_source_mapping",
      "name": "processor_sqs",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "amazon_managed_kafka_event_source_config": [],
            "arn": "arn:aws:lambda:us-east-1:855212953422:event-source-mapping:ce6e3d2c-728d-4f0a-99b9-64ace44766bf",
            "batch_size": 1,
            "bisect_batch_on_function_error": false,
            "destination_config": [],
            "document_db_event_source_config": [],
            "enabled": true,
            "event_source_arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-processing",
            "filter_criteria": [],
            "function_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-processor",
            "function_name": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-processor",
            "function_response_types": [],
            "id": "ce6e3d2c-728d-4f0a-99b9-64ace44766bf",
            "kms_key_arn": "",
            "last_modified": "2025-09-17T00:52:07Z",
            "last_processing_result": "",
            "maximum_batching_window_in_seconds": 5,
            "maximum_record_age_in_seconds": 0,
            "maximum_retry_attempts": 0,
            "metrics_config": [],
            "parallelization_factor": 0,
            "provisioned_poller_config": [],
            "queues": [],
            "scaling_config": [],
            "self_managed_event_source": [],
            "self_managed_kafka_event_source_config": [],
            "source_access_configuration": [],
            "starting_position": "",
            "starting_position_timestamp": "",
            "state": "Enabled",
            "state_transition_reason": "USER_INITIATED",
            "tags": {},
            "tags_all": {
              "ManagedBy": "Terraform",
              "Project": "pdf-extractor-api"
            },
            "topics": [],
            "tumbling_window_in_seconds": 0,
            "uuid": "ce6e3d2c-728d-4f0a-99b9-64ace44766bf"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_lambda_function.processor",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "api",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api",
            "code_sha256": "tLASzrtvD7iTXIx50NiK03WGXaJl4Kx1gjRmBt7Z0A8=",
            "code_signing_config_arn": "",
            "dead_letter_config": [
              {
                "target_arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq"
              }
            ],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DLQ_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
                  "ENVIRONMENT": "dev",
                  "FUNCTION_TYPE": "api",
                  "JOBS_TABLE_NAME": "pdf-extractor-api-jobs",
                  "PROCESSING_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
                  "S3_BUCKET_NAME": "pdf-extractor-api-storage",
                  "TRANSACTIONS_TABLE": "pdf-extractor-api-transactions",
                  "USAGE_TABLE_NAME": "pdf-extractor-api-usage"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_packages/functions/api.zip",
            "function_name": "pdf-extractor-api-api",
            "handler": "handler.handler",
            "id": "pdf-extractor-api-api",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-09-22T19:23:41.000+0000",
            "layers": [
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27"
            ],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/pdf-extractor-api-api",
                "system_log_level": ""
              }
            ],
            "memory_size": 512,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-api:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": 5,
            "role": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "tLASzrtvD7iTXIx50NiK03WGXaJl4Kx1gjRmBt7Z0A8=",
            "source_code_size": 2712,
            "tags": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-api",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "tags_all": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-api",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "timeout": 180,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "cleanup",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-cleanup",
            "code_sha256": "QJQZCeYxWt6V5ZKQjoMMaUPm4fdJo5dLHc8WpznIdQM=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "CLEANUP_DAYS": "30",
                  "DLQ_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
                  "ENVIRONMENT": "dev",
                  "FUNCTION_TYPE": "cleanup",
                  "JOBS_TABLE_NAME": "pdf-extractor-api-jobs",
                  "PROCESSING_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
                  "S3_BUCKET_NAME": "pdf-extractor-api-storage",
                  "TRANSACTIONS_TABLE": "pdf-extractor-api-transactions",
                  "USAGE_TABLE_NAME": "pdf-extractor-api-usage"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_packages/functions/cleanup.zip",
            "function_name": "pdf-extractor-api-cleanup",
            "handler": "handler.handler",
            "id": "pdf-extractor-api-cleanup",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-cleanup/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-09-22T19:24:11.000+0000",
            "layers": [
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27"
            ],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/pdf-extractor-api-cleanup",
                "system_log_level": ""
              }
            ],
            "memory_size": 256,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-cleanup:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-cleanup:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "QJQZCeYxWt6V5ZKQjoMMaUPm4fdJo5dLHc8WpznIdQM=",
            "source_code_size": 2283,
            "tags": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-cleanup",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "tags_all": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-cleanup",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "timeout": 300,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "csv_export",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-csv-export",
            "code_sha256": "tDzWatxQiQYvgtHRvr3/ZPxRg49VjM5q+pN4yM1aGq4=",
            "code_signing_config_arn": "",
            "dead_letter_config": [
              {
                "target_arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq"
              }
            ],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DLQ_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
                  "ENVIRONMENT": "dev",
                  "FUNCTION_TYPE": "csv_export",
                  "JOBS_TABLE_NAME": "pdf-extractor-api-jobs",
                  "PROCESSING_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
                  "S3_BUCKET_NAME": "pdf-extractor-api-storage",
                  "TRANSACTIONS_TABLE": "pdf-extractor-api-transactions",
                  "USAGE_TABLE_NAME": "pdf-extractor-api-usage"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_packages/functions/csv_export.zip",
            "function_name": "pdf-extractor-api-csv-export",
            "handler": "handler.handler",
            "id": "pdf-extractor-api-csv-export",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-csv-export/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-09-22T19:23:53.000+0000",
            "layers": [
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27"
            ],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/pdf-extractor-api-csv-export",
                "system_log_level": ""
              }
            ],
            "memory_size": 256,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-csv-export:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-csv-export:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": 5,
            "role": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "tDzWatxQiQYvgtHRvr3/ZPxRg49VjM5q+pN4yM1aGq4=",
            "source_code_size": 2375,
            "tags": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-csv-export",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "tags_all": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-csv-export",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "timeout": 60,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "dlq_processor",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-dlq-processor",
            "code_sha256": "tkMuEzmDqK4+xHULJgN+udnzlYUTyFN+ViMxW1HuQeE=",
            "code_signing_config_arn": "",
            "dead_letter_config": [],
            "description": "",
            "environment": [
              {
                "variables": {
                  "ALERT_SNS_TOPIC": "",
                  "DLQ_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
                  "ENVIRONMENT": "dev",
                  "FUNCTION_TYPE": "dlq_processor",
                  "JOBS_TABLE_NAME": "pdf-extractor-api-jobs",
                  "MAX_RETRY_COUNT": "3",
                  "PROCESSING_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
                  "S3_BUCKET_NAME": "pdf-extractor-api-storage",
                  "TRANSACTIONS_TABLE": "pdf-extractor-api-transactions",
                  "USAGE_TABLE_NAME": "pdf-extractor-api-usage"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_packages/functions/dlq_processor.zip",
            "function_name": "pdf-extractor-api-dlq-processor",
            "handler": "handler.handler",
            "id": "pdf-extractor-api-dlq-processor",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-dlq-processor/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-09-22T19:23:47.000+0000",
            "layers": [
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27"
            ],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/pdf-extractor-api-dlq-processor",
                "system_log_level": ""
              }
            ],
            "memory_size": 512,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-dlq-processor:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-dlq-processor:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": -1,
            "role": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "tkMuEzmDqK4+xHULJgN+udnzlYUTyFN+ViMxW1HuQeE=",
            "source_code_size": 3188,
            "tags": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-dlq-processor",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "tags_all": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-dlq-processor",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "timeout": 300,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "pdf_viewer",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-pdf-viewer",
            "code_sha256": "c1Y10XwBQ6NCiSyj3LmeOYSMR5h2kKK8DOm+6NMr6Wo=",
            "code_signing_config_arn": "",
            "dead_letter_config": [
              {
                "target_arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq"
              }
            ],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DLQ_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
                  "ENVIRONMENT": "dev",
                  "FUNCTION_TYPE": "pdf_viewer",
                  "JOBS_TABLE_NAME": "pdf-extractor-api-jobs",
                  "PROCESSING_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
                  "S3_BUCKET_NAME": "pdf-extractor-api-storage",
                  "TRANSACTIONS_TABLE": "pdf-extractor-api-transactions",
                  "USAGE_TABLE_NAME": "pdf-extractor-api-usage"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_packages/functions/pdf_viewer.zip",
            "function_name": "pdf-extractor-api-pdf-viewer",
            "handler": "handler.handler",
            "id": "pdf-extractor-api-pdf-viewer",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-pdf-viewer/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-09-22T19:23:35.000+0000",
            "layers": [
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27"
            ],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/pdf-extractor-api-pdf-viewer",
                "system_log_level": ""
              }
            ],
            "memory_size": 1024,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-pdf-viewer:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-pdf-viewer:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": 5,
            "role": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "c1Y10XwBQ6NCiSyj3LmeOYSMR5h2kKK8DOm+6NMr6Wo=",
            "source_code_size": 2269,
            "tags": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-pdf-viewer",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "tags_all": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-pdf-viewer",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "timeout": 180,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "processor",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-processor",
            "code_sha256": "t9sE8HmRtbwx6CsQdssHZe3yQG7nUUxbW4riqjq0wL8=",
            "code_signing_config_arn": "",
            "dead_letter_config": [
              {
                "target_arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq"
              }
            ],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DLQ_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
                  "ENVIRONMENT": "dev",
                  "FUNCTION_TYPE": "processor",
                  "JOBS_TABLE_NAME": "pdf-extractor-api-jobs",
                  "PROCESSING_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
                  "S3_BUCKET_NAME": "pdf-extractor-api-storage",
                  "TRANSACTIONS_TABLE": "pdf-extractor-api-transactions",
                  "USAGE_TABLE_NAME": "pdf-extractor-api-usage"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_packages/functions/processor.zip",
            "function_name": "pdf-extractor-api-processor",
            "handler": "handler.handler",
            "id": "pdf-extractor-api-processor",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-processor/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-09-22T19:24:05.000+0000",
            "layers": [
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27"
            ],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/pdf-extractor-api-processor",
                "system_log_level": ""
              }
            ],
            "memory_size": 1024,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-processor:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-processor:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": 2,
            "role": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "t9sE8HmRtbwx6CsQdssHZe3yQG7nUUxbW4riqjq0wL8=",
            "source_code_size": 19120,
            "tags": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-processor",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "tags_all": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-processor",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "timeout": 600,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "statement_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-statement-data",
            "code_sha256": "bNz8xgGEgYvspE3hsOXN2RPCvVtdJ+6VrWjEFyGKSiE=",
            "code_signing_config_arn": "",
            "dead_letter_config": [
              {
                "target_arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq"
              }
            ],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DLQ_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
                  "ENVIRONMENT": "dev",
                  "FUNCTION_TYPE": "statement_data",
                  "JOBS_TABLE_NAME": "pdf-extractor-api-jobs",
                  "PROCESSING_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
                  "S3_BUCKET_NAME": "pdf-extractor-api-storage",
                  "TRANSACTIONS_TABLE": "pdf-extractor-api-transactions",
                  "USAGE_TABLE_NAME": "pdf-extractor-api-usage"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_packages/functions/statement_data.zip",
            "function_name": "pdf-extractor-api-statement-data",
            "handler": "handler.handler",
            "id": "pdf-extractor-api-statement-data",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-statement-data/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-09-22T19:23:59.000+0000",
            "layers": [
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27"
            ],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/pdf-extractor-api-statement-data",
                "system_log_level": ""
              }
            ],
            "memory_size": 256,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-statement-data:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-statement-data:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": 5,
            "role": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "bNz8xgGEgYvspE3hsOXN2RPCvVtdJ+6VrWjEFyGKSiE=",
            "source_code_size": 2314,
            "tags": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-statement-data",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "tags_all": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-statement-data",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "timeout": 60,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_function",
      "name": "upload",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "architectures": [
              "x86_64"
            ],
            "arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-upload",
            "code_sha256": "RzQRJg5PAIoYBtBciSFXeD05agNhDgRFhBuruHRB5hU=",
            "code_signing_config_arn": "",
            "dead_letter_config": [
              {
                "target_arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq"
              }
            ],
            "description": "",
            "environment": [
              {
                "variables": {
                  "DLQ_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
                  "ENVIRONMENT": "dev",
                  "FUNCTION_TYPE": "upload",
                  "JOBS_TABLE_NAME": "pdf-extractor-api-jobs",
                  "PROCESSING_QUEUE_URL": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
                  "S3_BUCKET_NAME": "pdf-extractor-api-storage",
                  "TRANSACTIONS_TABLE": "pdf-extractor-api-transactions",
                  "USAGE_TABLE_NAME": "pdf-extractor-api-usage"
                }
              }
            ],
            "ephemeral_storage": [
              {
                "size": 512
              }
            ],
            "file_system_config": [],
            "filename": "lambda_packages/functions/upload.zip",
            "function_name": "pdf-extractor-api-upload",
            "handler": "handler.handler",
            "id": "pdf-extractor-api-upload",
            "image_config": [],
            "image_uri": "",
            "invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-upload/invocations",
            "kms_key_arn": "",
            "last_modified": "2025-09-22T19:24:17.000+0000",
            "layers": [
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api:27",
              "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27"
            ],
            "logging_config": [
              {
                "application_log_level": "",
                "log_format": "Text",
                "log_group": "/aws/lambda/pdf-extractor-api-upload",
                "system_log_level": ""
              }
            ],
            "memory_size": 1024,
            "package_type": "Zip",
            "publish": false,
            "qualified_arn": "arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-upload:$LATEST",
            "qualified_invoke_arn": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:855212953422:function:pdf-extractor-api-upload:$LATEST/invocations",
            "replace_security_groups_on_destroy": null,
            "replacement_security_group_ids": null,
            "reserved_concurrent_executions": 3,
            "role": "arn:aws:iam::855212953422:role/pdf-extractor-api-lambda-role",
            "runtime": "python3.11",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "snap_start": [],
            "source_code_hash": "RzQRJg5PAIoYBtBciSFXeD05agNhDgRFhBuruHRB5hU=",
            "source_code_size": 4047,
            "tags": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-upload",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "tags_all": {
              "Architecture": "layers",
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-upload",
              "Project": "pdf-extractor-api",
              "Type": "Lambda"
            },
            "timeout": 300,
            "timeouts": null,
            "tracing_config": [
              {
                "mode": "PassThrough"
              }
            ],
            "version": "$LATEST",
            "vpc_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda",
      "mode": "managed",
      "type": "aws_lambda_permission",
      "name": "allow_cloudwatch_cleanup",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:InvokeFunction",
            "event_source_token": null,
            "function_name": "pdf-extractor-api-cleanup",
            "function_url_auth_type": null,
            "id": "AllowExecutionFromCloudWatch",
            "principal": "events.amazonaws.com",
            "principal_org_id": null,
            "qualifier": "",
            "source_account": null,
            "source_arn": "arn:aws:events:us-east-1:855212953422:rule/pdf-extractor-api-cleanup-schedule",
            "statement_id": "AllowExecutionFromCloudWatch",
            "statement_id_prefix": ""
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "data.aws_caller_identity.current",
            "module.dynamodb.aws_dynamodb_table.jobs",
            "module.dynamodb.aws_dynamodb_table.transactions",
            "module.dynamodb.aws_dynamodb_table.usage",
            "module.iam.aws_iam_policy.cloudwatch_policy",
            "module.iam.aws_iam_policy.dynamodb_policy",
            "module.iam.aws_iam_policy.s3_policy",
            "module.iam.aws_iam_policy.sqs_policy",
            "module.iam.aws_iam_role.api_gateway_cloudwatch_role",
            "module.iam.aws_iam_role.lambda_role",
            "module.iam.aws_iam_role_policy_attachment.api_gateway_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_basic",
            "module.iam.aws_iam_role_policy_attachment.lambda_cloudwatch",
            "module.iam.aws_iam_role_policy_attachment.lambda_dynamodb",
            "module.iam.aws_iam_role_policy_attachment.lambda_s3",
            "module.iam.aws_iam_role_policy_attachment.lambda_sqs",
            "module.lambda.aws_cloudwatch_event_rule.cleanup_schedule",
            "module.lambda.aws_lambda_function.cleanup",
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.api_dependencies",
            "module.lambda_layers.aws_lambda_layer_version_permission.business_logic",
            "module.lambda_layers.aws_lambda_layer_version_permission.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current",
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq",
            "module.sqs.aws_sqs_queue.processing"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_layers",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "855212953422",
            "arn": "arn:aws:iam::855212953422:user/anjimedikonda",
            "id": "855212953422",
            "user_id": "AIDA4OHVKB5HCRJBIDIHT"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.lambda_layers",
      "mode": "managed",
      "type": "aws_lambda_layer_version",
      "name": "api_dependencies",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api:27",
            "code_sha256": "pCcFpmt6JRyPG9yGQq7Sa7TeYvE5mj5ZurgvCJb1x2E=",
            "compatible_architectures": null,
            "compatible_runtimes": [
              "python3.11"
            ],
            "created_date": "2025-09-22T19:23:22.853+0000",
            "description": "API dependencies: FastAPI, uvicorn, mangum, httpx",
            "filename": "lambda_packages/layers/pdf-extractor-api.zip",
            "id": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api:27",
            "layer_arn": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api",
            "layer_name": "pdf-extractor-api-api",
            "license_info": "",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "source_code_hash": "pCcFpmt6JRyPG9yGQq7Sa7TeYvE5mj5ZurgvCJb1x2E=",
            "source_code_size": 246700,
            "version": "27"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_layers",
      "mode": "managed",
      "type": "aws_lambda_layer_version",
      "name": "business_logic",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27",
            "code_sha256": "sJxhIL9iTidU4+zJuTXaJhP2kTQO5/50fiS9UB6iuMc=",
            "compatible_architectures": null,
            "compatible_runtimes": [
              "python3.11"
            ],
            "created_date": "2025-09-22T19:23:29.365+0000",
            "description": "Business logic modules: auth, config, logging, PDF extraction",
            "filename": "lambda_packages/layers/pdf-extractor-business.zip",
            "id": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27",
            "layer_arn": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business",
            "layer_name": "pdf-extractor-api-business",
            "license_info": "",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "source_code_hash": "sJxhIL9iTidU4+zJuTXaJhP2kTQO5/50fiS9UB6iuMc=",
            "source_code_size": 1271519,
            "version": "27"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_layers",
      "mode": "managed",
      "type": "aws_lambda_layer_version",
      "name": "common_dependencies",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
            "code_sha256": "SpHzhP90fYR3KXDEOwHDhe079o5Iu3p3xvrYvLL6mzU=",
            "compatible_architectures": null,
            "compatible_runtimes": [
              "python3.11"
            ],
            "created_date": "2025-09-22T19:23:16.626+0000",
            "description": "Common dependencies: boto3, pdfplumber, pandas, pydantic, etc.",
            "filename": "lambda_packages/layers/pdf-extractor-common.zip",
            "id": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27",
            "layer_arn": "arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common",
            "layer_name": "pdf-extractor-api-common",
            "license_info": "",
            "s3_bucket": null,
            "s3_key": null,
            "s3_object_version": null,
            "signing_job_arn": "",
            "signing_profile_version_arn": "",
            "skip_destroy": false,
            "source_code_hash": "SpHzhP90fYR3KXDEOwHDhe079o5Iu3p3xvrYvLL6mzU=",
            "source_code_size": 307183,
            "version": "27"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_layers",
      "mode": "managed",
      "type": "aws_lambda_layer_version_permission",
      "name": "api_dependencies",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:GetLayerVersion",
            "id": "pdf-extractor-api-api,27",
            "layer_name": "pdf-extractor-api-api",
            "organization_id": null,
            "policy": "{\"Version\":\"2012-10-17\",\"Id\":\"default\",\"Statement\":[{\"Sid\":\"AllowLambdaUsage\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::855212953422:root\"},\"Action\":\"lambda:GetLayerVersion\",\"Resource\":\"arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-api:27\"}]}",
            "principal": "855212953422",
            "revision_id": "742fe910-0de2-4b10-bffd-b013209bbcb1",
            "skip_destroy": false,
            "statement_id": "AllowLambdaUsage",
            "version_number": 27
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda_layers.aws_lambda_layer_version.api_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_layers",
      "mode": "managed",
      "type": "aws_lambda_layer_version_permission",
      "name": "business_logic",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:GetLayerVersion",
            "id": "pdf-extractor-api-business,27",
            "layer_name": "pdf-extractor-api-business",
            "organization_id": null,
            "policy": "{\"Version\":\"2012-10-17\",\"Id\":\"default\",\"Statement\":[{\"Sid\":\"AllowLambdaUsage\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::855212953422:root\"},\"Action\":\"lambda:GetLayerVersion\",\"Resource\":\"arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-business:27\"}]}",
            "principal": "855212953422",
            "revision_id": "8850b3ae-ae3c-40b7-9266-578e8278e562",
            "skip_destroy": false,
            "statement_id": "AllowLambdaUsage",
            "version_number": 27
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda_layers.aws_lambda_layer_version.business_logic",
            "module.lambda_layers.data.aws_caller_identity.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.lambda_layers",
      "mode": "managed",
      "type": "aws_lambda_layer_version_permission",
      "name": "common_dependencies",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "action": "lambda:GetLayerVersion",
            "id": "pdf-extractor-api-common,27",
            "layer_name": "pdf-extractor-api-common",
            "organization_id": null,
            "policy": "{\"Version\":\"2012-10-17\",\"Id\":\"default\",\"Statement\":[{\"Sid\":\"AllowLambdaUsage\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::855212953422:root\"},\"Action\":\"lambda:GetLayerVersion\",\"Resource\":\"arn:aws:lambda:us-east-1:855212953422:layer:pdf-extractor-api-common:27\"}]}",
            "principal": "855212953422",
            "revision_id": "ffd07985-fcb9-4601-b862-7ab691622b12",
            "skip_destroy": false,
            "statement_id": "AllowLambdaUsage",
            "version_number": 27
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.lambda_layers.aws_lambda_layer_version.common_dependencies",
            "module.lambda_layers.data.aws_caller_identity.current"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": null,
            "arn": "arn:aws:s3:::pdf-extractor-api-storage",
            "bucket": "pdf-extractor-api-storage",
            "bucket_domain_name": "pdf-extractor-api-storage.s3.amazonaws.com",
            "bucket_prefix": "",
            "bucket_regional_domain_name": "pdf-extractor-api-storage.s3.us-east-1.amazonaws.com",
            "cors_rule": [
              {
                "allowed_headers": [
                  "*"
                ],
                "allowed_methods": [
                  "POST",
                  "GET",
                  "HEAD",
                  "DELETE",
                  "PUT"
                ],
                "allowed_origins": [
                  "*"
                ],
                "expose_headers": [
                  "ETag",
                  "x-amz-version-id"
                ],
                "max_age_seconds": 3000
              }
            ],
            "force_destroy": false,
            "grant": [
              {
                "id": "f23570cfe444b1c8be4a024ae300950b44ba66de4b72c27ec1eda71aab2e728f",
                "permissions": [
                  "FULL_CONTROL"
                ],
                "type": "CanonicalUser",
                "uri": ""
              }
            ],
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "pdf-extractor-api-storage",
            "lifecycle_rule": [
              {
                "abort_incomplete_multipart_upload_days": 0,
                "enabled": true,
                "expiration": [
                  {
                    "date": "",
                    "days": 7,
                    "expired_object_delete_marker": false
                  }
                ],
                "id": "cleanup-uploads",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "uploads/",
                "tags": {},
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 0,
                "enabled": true,
                "expiration": [
                  {
                    "date": "",
                    "days": 14,
                    "expired_object_delete_marker": false
                  }
                ],
                "id": "cleanup-results",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "results/",
                "tags": {},
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 0,
                "enabled": true,
                "expiration": [
                  {
                    "date": "",
                    "days": 1,
                    "expired_object_delete_marker": false
                  }
                ],
                "id": "cleanup-temp",
                "noncurrent_version_expiration": [
                  {
                    "days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "temp/",
                "tags": {},
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload_days": 1,
                "enabled": true,
                "expiration": [],
                "id": "cleanup-multipart",
                "noncurrent_version_expiration": [],
                "noncurrent_version_transition": [],
                "prefix": "",
                "tags": {},
                "transition": []
              }
            ],
            "logging": [],
            "object_lock_configuration": [],
            "object_lock_enabled": false,
            "policy": "",
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [
              {
                "rule": [
                  {
                    "apply_server_side_encryption_by_default": [
                      {
                        "kms_master_key_id": "",
                        "sse_algorithm": "AES256"
                      }
                    ],
                    "bucket_key_enabled": true
                  }
                ]
              }
            ],
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-storage",
              "Project": "pdf-extractor-api",
              "Type": "S3"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-storage",
              "Project": "pdf-extractor-api",
              "Type": "S3"
            },
            "timeouts": null,
            "versioning": [
              {
                "enabled": true,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInJlYWQiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket_cors_configuration",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "pdf-extractor-api-storage",
            "cors_rule": [
              {
                "allowed_headers": [
                  "*"
                ],
                "allowed_methods": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "POST",
                  "PUT"
                ],
                "allowed_origins": [
                  "*"
                ],
                "expose_headers": [
                  "ETag",
                  "x-amz-version-id"
                ],
                "id": "",
                "max_age_seconds": 3000
              }
            ],
            "expected_bucket_owner": "",
            "id": "pdf-extractor-api-storage"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.storage"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket_lifecycle_configuration",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "bucket": "pdf-extractor-api-storage",
            "expected_bucket_owner": "",
            "id": "pdf-extractor-api-storage",
            "rule": [
              {
                "abort_incomplete_multipart_upload": [],
                "expiration": [
                  {
                    "date": null,
                    "days": 7,
                    "expired_object_delete_marker": false
                  }
                ],
                "filter": [
                  {
                    "and": [],
                    "object_size_greater_than": null,
                    "object_size_less_than": null,
                    "prefix": "uploads/",
                    "tag": []
                  }
                ],
                "id": "cleanup-uploads",
                "noncurrent_version_expiration": [
                  {
                    "newer_noncurrent_versions": null,
                    "noncurrent_days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "",
                "status": "Enabled",
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload": [],
                "expiration": [
                  {
                    "date": null,
                    "days": 14,
                    "expired_object_delete_marker": false
                  }
                ],
                "filter": [
                  {
                    "and": [],
                    "object_size_greater_than": null,
                    "object_size_less_than": null,
                    "prefix": "results/",
                    "tag": []
                  }
                ],
                "id": "cleanup-results",
                "noncurrent_version_expiration": [
                  {
                    "newer_noncurrent_versions": null,
                    "noncurrent_days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "",
                "status": "Enabled",
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload": [],
                "expiration": [
                  {
                    "date": null,
                    "days": 1,
                    "expired_object_delete_marker": false
                  }
                ],
                "filter": [
                  {
                    "and": [],
                    "object_size_greater_than": null,
                    "object_size_less_than": null,
                    "prefix": "temp/",
                    "tag": []
                  }
                ],
                "id": "cleanup-temp",
                "noncurrent_version_expiration": [
                  {
                    "newer_noncurrent_versions": null,
                    "noncurrent_days": 1
                  }
                ],
                "noncurrent_version_transition": [],
                "prefix": "",
                "status": "Enabled",
                "transition": []
              },
              {
                "abort_incomplete_multipart_upload": [
                  {
                    "days_after_initiation": 1
                  }
                ],
                "expiration": [],
                "filter": [
                  {
                    "and": [],
                    "object_size_greater_than": null,
                    "object_size_less_than": null,
                    "prefix": "",
                    "tag": []
                  }
                ],
                "id": "cleanup-multipart",
                "noncurrent_version_expiration": [],
                "noncurrent_version_transition": [],
                "prefix": "",
                "status": "Enabled",
                "transition": []
              }
            ],
            "timeouts": null,
            "transition_default_minimum_object_size": "all_storage_classes_128K"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "dependencies": [
            "module.s3.aws_s3_bucket.storage"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket_public_access_block",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "block_public_acls": true,
            "block_public_policy": true,
            "bucket": "pdf-extractor-api-storage",
            "id": "pdf-extractor-api-storage",
            "ignore_public_acls": true,
            "restrict_public_buckets": true
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.storage"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket_server_side_encryption_configuration",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "pdf-extractor-api-storage",
            "expected_bucket_owner": "",
            "id": "pdf-extractor-api-storage",
            "rule": [
              {
                "apply_server_side_encryption_by_default": [
                  {
                    "kms_master_key_id": "",
                    "sse_algorithm": "AES256"
                  }
                ],
                "bucket_key_enabled": true
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.storage"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.s3",
      "mode": "managed",
      "type": "aws_s3_bucket_versioning",
      "name": "storage",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "pdf-extractor-api-storage",
            "expected_bucket_owner": "",
            "id": "pdf-extractor-api-storage",
            "mfa": null,
            "versioning_configuration": [
              {
                "mfa_delete": "",
                "status": "Enabled"
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "module.s3.aws_s3_bucket.storage"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.sqs",
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "dlq",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq",
            "content_based_deduplication": false,
            "deduplication_scope": "",
            "delay_seconds": 0,
            "fifo_queue": false,
            "fifo_throughput_limit": "",
            "id": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
            "kms_data_key_reuse_period_seconds": 300,
            "kms_master_key_id": "",
            "max_message_size": 262144,
            "message_retention_seconds": 1209600,
            "name": "pdf-extractor-api-dlq",
            "name_prefix": "",
            "policy": "",
            "receive_wait_time_seconds": 0,
            "redrive_allow_policy": "",
            "redrive_policy": "",
            "sqs_managed_sse_enabled": true,
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-dlq",
              "Project": "pdf-extractor-api",
              "Type": "SQS-DLQ"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-dlq",
              "Project": "pdf-extractor-api",
              "Type": "SQS-DLQ"
            },
            "timeouts": null,
            "url": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-dlq",
            "visibility_timeout_seconds": 1800
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwLCJ1cGRhdGUiOjE4MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.sqs",
      "mode": "managed",
      "type": "aws_sqs_queue",
      "name": "processing",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-processing",
            "content_based_deduplication": false,
            "deduplication_scope": "",
            "delay_seconds": 0,
            "fifo_queue": false,
            "fifo_throughput_limit": "",
            "id": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
            "kms_data_key_reuse_period_seconds": 300,
            "kms_master_key_id": "",
            "max_message_size": 262144,
            "message_retention_seconds": 604800,
            "name": "pdf-extractor-api-processing",
            "name_prefix": "",
            "policy": "",
            "receive_wait_time_seconds": 0,
            "redrive_allow_policy": "",
            "redrive_policy": "{\"deadLetterTargetArn\":\"arn:aws:sqs:us-east-1:855212953422:pdf-extractor-api-dlq\",\"maxReceiveCount\":2}",
            "sqs_managed_sse_enabled": true,
            "tags": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-processing",
              "Project": "pdf-extractor-api",
              "Type": "SQS"
            },
            "tags_all": {
              "ManagedBy": "Terraform",
              "Name": "pdf-extractor-api-processing",
              "Project": "pdf-extractor-api",
              "Type": "SQS"
            },
            "timeouts": null,
            "url": "https://sqs.us-east-1.amazonaws.com/855212953422/pdf-extractor-api-processing",
            "visibility_timeout_seconds": 720
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAsImRlbGV0ZSI6MTgwMDAwMDAwMDAwLCJ1cGRhdGUiOjE4MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.s3.aws_s3_bucket.storage",
            "module.s3.aws_s3_bucket_cors_configuration.storage",
            "module.s3.aws_s3_bucket_lifecycle_configuration.storage",
            "module.s3.aws_s3_bucket_public_access_block.storage",
            "module.s3.aws_s3_bucket_server_side_encryption_configuration.storage",
            "module.s3.aws_s3_bucket_versioning.storage",
            "module.sqs.aws_sqs_queue.dlq"
          ],
          "create_before_destroy": true
        }
      ]
    }
  ],
  "check_results": null
}
